# Simple workflow for deploying static content to GitHub Pages
name: Deploy Developer Webpage

on:
  push:
    branches: ["documentation"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  SCCACHE_GHA_ENABLED: "true"
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    name: Github Pages
    runs-on: ubuntu-latest
    
    steps:
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      # Install the packages required for building and testing.      
      - name: Install dependencies for Ubuntu
        run: sudo apt update && sudo apt install -y build-essential libboost-dev libgl1-mesa-dev qtbase5-dev texlive texlive-latex-extra texlive-science texlive-pstricks wget

      - name: Install doxygen
        run: wget https://www.doxygen.nl/files/doxygen-1.9.7.linux.bin.tar.gz && tar -xf ./doxygen-1.9.7.linux.bin.tar.gz && cd ./doxygen-1.9.7 && sudo make

      - uses: mozilla-actions/sccache-action@v0.0.3
    
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'documentation'
          path: src
          
      # Install the pip dependencies
      - name: Install python dependencies
        run: pip install --user -r src/requirements.txt
                
      # Configure CMake in a 'build' subdirectory        
      - name: Configure CMake Linux
        run: >
          cmake 
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DMCRL2_ENABLE_EXPERIMENTAL=ON
          -DMCRL2_ENABLE_DOCUMENTATION=ON
          -DCMAKE_C_COMPILER_LAUNCHER=sccache
          -DCMAKE_CXX_COMPILER_LAUNCHER=sccache
          -B ${{github.workspace}}/build
          -S ${{github.workspace}}/src

      - name: Build Tools
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}
        
      - name: Build Documentation
        run: cmake --build ${{github.workspace}}/build --target doc --config ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload sphinx documentation build
          path: '${{github.workspace}}/build/sphinx/build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
