@article{Milner83,
  author    = {Robin Milner},
  title     = {Calculi for Synchrony and Asynchrony},
  journal   = {Theor. Comput. Sci.},
  volume    = {25},
  pages     = {267--310},
  year      = {1983},
  doi       = {10.1016/0304-3975(83)90114-7},
  timestamp = {Sun, 28 May 2017 13:20:00 +0200},
  biburl    = {https://dblp.org/rec/journals/tcs/Milner83.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{MeijerBlomPol2008,
title = "Symbolic Reachability for Process Algebras with Recursive Data Types",
abstract = "In this paper, we present a symbolic reachability algorithm for process algebras with recursive data types. Like the various saturation based algorithms of Ciardo et al, the algorithm is based on partitioning of the transition relation into events whose influence is local. As new features, our algorithm supports recursive data types and allows unbounded non-determinism, which is needed to support open systems with data. The algorithm does not use any specific features of process algebras. That is, it will work for any system that consists of a fixed number of communicating processes, where in each atomic step only a subset of the processes participate. As proof of concept we have implemented the algorithm in the context of the Î¼CRL toolset. We also compared the performance of this prototype with the performance of the existing explicit tools on a set of typical case studies.",
keywords = "EWI-13443, FMT-MC: MODEL CHECKING, METIS-251187, EC Grant Agreement nr.: FP6/043235, IR-62465",
author = "Stefan Blom and {van de Pol}, {Jan Cornelis}",
year = "2008",
month = aug,
day = "25",
doi = "10.1007/978-3-540-85762-4_6",
language = "Undefined",
isbn = "978-3-540-85761-7",
series = "Lecture Notes in Computer Science",
publisher = "Springer",
number = "Supplement",
pages = "81--95",
editor = "J.S. Fitzgerald and A.E. Haxthausen and H. Yenigun",
booktitle = "Theoretical Aspects of Computing - ICTAC 2008",
}

@misc{Meijer2014,
          author = {J.J.G. {Meijer}},
           title = {Improving Reachability Analysis in Ltsmin - Guards, Read, Write and Copy Dependencies for mcrl2, Promela and Dve},
            year = {2014},
           month = {March},
             url = {http://essay.utwente.nl/64834/},
        abstract = {To improve symbolic reachability analysis in the model checking toolset LTSmin, we present two improve-
ments to existing reachability algorithms. LTSmin uses a disjunctive partitioning scheme to efficiently
analyze models of asynchronous systems. In these models transitions can be partitioned into groups,
which modify only a small part of the state vector. Currently, there are no well defined notions, for
whether a transition group reads and/or writes to an element in the state vector, which can be used in
symbolic algorithms. Therefore, we present new definitions for read and write dependencies and show
how algorithms can exploit these. This improvement always results in faster state space generation and
many models such as 1-safe Petri nets highly benefit of these changes. A major issue we solved to sepa-
rate dependencies correctly is that we had to cope with copying values. We provide examples that were
intractable for LTSmin before, but can now be computed in a matter of minutes.
A transition in a model specification is often of the form ?if condition(x1,...,xn) =? A . X(x1?,...,xn?)?.
Our second improvement divides the condition into multiple conjuncts. These conjuncts can then be
evaluated separately. Symbolic algorithms can exploit this information and prevent computing successors
for large sets of states for only one conjunct evaluation. This greatly speeds up state space generation for
models such as Sokoban or dining philosophers. We provide examples that show a speedup ranging from
twice as fast to hundreds of times faster. An important issue in algorithms that exploit guard-splitting
is that they need to support a ternary logic for the evaluation of guards. This is due to the fact that a
guard can not only evaluate to true or false, but also to ?maybe?. Consider for example a term rewriting
system that splits the term someterm ? false and rewrites both conjuncts individually.
We present clear benchmarking results in the form of scatter plots with time and memory usage as well
as tables with detailed information about the size of the data structures. We make some important
assumptions such as on the completeness of model specifications. We use these assumptions and the
benchmarking results to validate our work.}
}

@article{DBLP:journals/sttt/DijkP17,
  author    = {Tom van Dijk and
               Jaco van de Pol},
  title     = {Sylvan: multi-core framework for decision diagrams},
  journal   = {Int. J. Softw. Tools Technol. Transf.},
  volume    = {19},
  number    = {6},
  pages     = {675--696},
  year      = {2017},
  url       = {https://doi.org/10.1007/s10009-016-0433-2},
  doi       = {10.1007/s10009-016-0433-2},
  timestamp = {Thu, 02 Apr 2020 08:37:22 +0200},
  biburl    = {https://dblp.org/rec/journals/sttt/DijkP17.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DijkP18,
  author       = {Tom van Dijk and
                  Jaco van de Pol},
  title        = {Multi-core symbolic bisimulation minimisation},
  journal      = {Int. J. Softw. Tools Technol. Transf.},
  volume       = {20},
  number       = {2},
  pages        = {157--177},
  year         = {2018},
  url          = {https://doi.org/10.1007/s10009-017-0468-z},
  doi          = {10.1007/S10009-017-0468-Z},
  timestamp    = {Thu, 02 Apr 2020 08:37:33 +0200},
  biburl       = {https://dblp.org/rec/journals/sttt/DijkP18.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{WimmerHHSB06,
  author       = {Ralf Wimmer and
                  Marc Herbstritt and
                  Holger Hermanns and
                  Kelley Strampp and
                  Bernd Becker},
  editor       = {Susanne Graf and
                  Wenhui Zhang},
  title        = {Sigref- {A} Symbolic Bisimulation Tool Box},
  booktitle    = {Automated Technology for Verification and Analysis, 4th International
                  Symposium, {ATVA} 2006, Beijing, China, October 23-26, 2006},
  series       = {Lecture Notes in Computer Science},
  volume       = {4218},
  pages        = {477--492},
  publisher    = {Springer},
  year         = {2006},
  url          = {https://doi.org/10.1007/11901914\_35},
  doi          = {10.1007/11901914\_35},
  timestamp    = {Tue, 21 Mar 2023 20:59:42 +0100},
  biburl       = {https://dblp.org/rec/conf/atva/WimmerHHSB06.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}